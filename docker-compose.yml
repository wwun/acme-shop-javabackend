services:

  build-stage:
    build:
      context: .
      dockerfile: Dockerfile.base
    image: acme-build #local label to be used by other services
    command: ["true"]

  config-server:
    build:
      context: .
      dockerfile: ./config-server/Dockerfile  # directorio relativo al archivo docker-compose.yml
    container_name: config-server
    depends_on:
      - build-stage
    ports:
      - "8888:8888"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8888/actuator/health | grep -q '\"status\"\\s*:\\s*\"UP\"'"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s

  eureka-server:
    build:
      context: .
      dockerfile: ./eureka-server/Dockerfile
    container_name: eureka-server
    ports:
      - "8761:8761"
    depends_on:
      config-server:
        condition: service_healthy
      build-stage:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8761/actuator/health | grep -q '\"status\"\\s*:\\s*\"UP\"'"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s
  
  user-service:
    build:
      context: .
      dockerfile: ./user-service/Dockerfile
    container_name: user-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - JAVA_TOOL_OPTIONS=-Djava.net.preferIPv4Stack=true
    ports:
      - "8081:8001"
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      build-stage:
        condition: service_started
    #command: ["tail", "-f", "/dev/null"]
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8001/actuator/health | grep -q '\"status\"\\s*:\\s*\"UP\"'"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s

  product-service:
    build:
      context: .
      dockerfile: ./product-service/Dockerfile
    container_name: product-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - JAVA_TOOL_OPTIONS=-Djava.net.preferIPv4Stack=true
    ports:
      - "8077:8001"
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      build-stage:
        condition: service_started

  order-service:
    build:
      context: .
      dockerfile: ./order-service/Dockerfile
    container_name: order-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - JAVA_TOOL_OPTIONS=-Djava.net.preferIPv4Stack=true
    ports:
      - "8088:8001"
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      build-stage:
        condition: service_started

  api-gateway-server:
    build:
      context: .
      dockerfile: ./api-gateway-server/Dockerfile
    container_name: api-gateway-server
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - JAVA_TOOL_OPTIONS=-Djava.net.preferIPv4Stack=true
    ports:
      - "8090:8090"
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      user-service:
        condition: service_started
      product-service:
        condition: service_started
      order-service:
        condition: service_started 
      build-stage:
        condition: service_started

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - user-service
      - product-service
      - order-service

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus